name: Build and Release Password Generator

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build with Maven
        run: |
          mvn -B clean package
          mvn -B package -Pconsole

      - name: Create Windows App Image (.exe)
        run: |
          jpackage --name "PasswordGenerator" `
                   --input target `
                   --main-jar PasswordGenerator.jar `
                   --main-class com.francismul.passwordgenerator.AppGui `
                   --type app-image `
                   --app-version "latest" `
                   --dest dist `
                   --vendor "Francis Mule" `
                   --description "Password Generator Application" `

      - name: Create Windows Installer (.msi)
        run: |
          jpackage --name "PasswordGenerator" `
                   --input target `
                   --main-jar PasswordGenerator.jar `
                   --main-class com.francismul.passwordgenerator.AppGui `
                   --type msi `
                   --app-version "latest" `
                   --dest dist `
                   --vendor "Francis Mule" `
                   --description "Password Generator Application" `
                   --win-menu `
                   --win-shortcut

      - name: Zip the executable folder
        run: |
          Compress-Archive -Path "dist\PasswordGenerator" -DestinationPath "PasswordGenerator-Portable.zip"

      - name: Get release info
        id: release_info
        run: |
          $tag = "${{ github.ref_name }}"
          if ($tag -match "^v?(\d+\.\d+\.\d+)") {
            echo "version=$($matches[1])" >> $env:GITHUB_OUTPUT
            echo "tag=$tag" >> $env:GITHUB_OUTPUT
          } else {
            $date = Get-Date -Format "yyyy-MM-dd-HHmm"
            echo "version=dev-$date" >> $env:GITHUB_OUTPUT
            echo "tag=dev-$date" >> $env:GITHUB_OUTPUT
          }

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_info.outputs.tag }}
          name: Password Generator v${{ steps.release_info.outputs.version }}
          body: |
            ## üöÄ Password Generator v${{ steps.release_info.outputs.version }}

            ### üì• Downloads
            - **PasswordGenerator.msi** ‚Äì Windows Installer (**Recommended**)  
              Installs the app system-wide with Start Menu & desktop shortcut.
            - **PasswordGenerator-Portable.zip** ‚Äì Portable Version (**No Installation**)  
              Extract and run. Perfect for USB drives or quick use.
            - **PasswordGenerator.jar** ‚Äì GUI Version (requires Java 21+)  
              Run with: `java -jar PasswordGenerator.jar`
            - **password-generator-Console.jar** ‚Äì Console Version (requires Java 21+)  
              Run with: `java -jar password-generator-Console.jar`

            ### ‚ú® Features
            - Modern GUI Password Generator (`com.francismul.passwordgenerator.AppGui`)
            - Console Password Generator (`com.francismul.passwordgenerator.App`)
            - Secure password generation with entropy calculation

            ### üñ•Ô∏è Requirements
            - **.msi / .exe**: No additional requirements
            - **.jar** files: Java 21 or later installed
          files: |
            dist/*.msi
            PasswordGenerator-Portable.zip
            target/PasswordGenerator.jar
            target/password-generator-Console.jar
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
